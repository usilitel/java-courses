
»гра "—апер"

-------
ќбщее описание

Ќачальные параметры (размер пол€, веро€тность по€влени€ мины) задаютс€ в классе MinerMain (GenerateListener)
Ћогика игры (реакци€ на действи€ пользовател€) описана в классе MinerBoard.
Ћог выводитс€ в консоль.

-------
ƒействи€ пользовател€

Ћевый клик = открыть €чейку
ѕравый клик = пометить €чейку как мину / сн€ть пометку

-------
ќписание используемых классов


класс MinerMain - главный класс дл€ игры "—апер" (из него запускаетс€ генераци€ массива €чеек и происходит запуск игры)

класс MinerBoardGenerator - класс дл€ генерации массива €чеек дл€ игры "—апер"
    ћетоды:
    MinerCell[][] generate(int x, int y) // генерируем массив MinerCell[][] и передаем его в MinerBoard.drawBoard

класс MinerCell - €чейка в игре "—апер"
    ѕол€:
    boolean isBomb; // true = мина (геттер: getIsBomb)
    boolean isMarkedAsBomb; // true = помечено пользователем как мина (геттер: getIsMarkedAsBomb, сеттер: markAsBomb)
    boolean isOpen; // true = €чейка открыта пользователем (геттер: getIsOpen, сеттер: setIsOpen)
    int cntMinesAround; // количество мин вокруг данной €чейки (геттер: getCntMinesAround, сеттер: setCntMinesAround)

класс MinerBoard - "доска" дл€ игры "—апер"
    ѕол€:
    MinerCell[][] minerCells; // массив €чеек
    ћетоды:
    void drawBoard(MinerCell[][] minerCells) // рисуем чистую доску дл€ новой игры
    void paint(Graphics g) // перерисовываем доску при клике мышкой
    boolean checkSuccess() // провер€ем успешное завершение игры (true = игра успешно завершена)
    void mouseClicked(MouseEvent e) // обрабатываем клик мышкой (открываем €чейку, помечаем €чейку, завершаем игру)


